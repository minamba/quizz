<!-- 
  Component: Sitecore.JsonDataProvider
  Purpose: data provider for core database, by itself it does not enable JsonDataProvider for core database - it is done in separate file.
  Changes: Do not change this file!
  Removal: Do not delete or disable this file when any other Sitecore.JsonDataProvider.Core.*.config files are in place.
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  <sitecore>
    <databases>
      <database id="core">
        <dataProviders>
          <dataProvider ref="dataProviders/json" param1="$(id)" patch:before="dataProvider">
            <!--  MAPPINGS - CORE DATABASE
                  A mapping allows to connect different sources of items into a single database. Each mapping can be read-only
                  or read-write (by default) which allows certain flexibility in configuration. Depending on a type of mapping
                  it can have extra definitiation attributes like file or media, but that is not mandatory. Mappings are applied
                  in the order they presented in the result configuration. When a new item is to be created, the first matching
                  mapping will be chosen as a target store for it.
            -->
            <Mappings hint="raw:AddMapping">
              <!--  DATABASE FILE MAPPING
                    This kind of mapping acts as entire database-level mapping which can bring its items into different parts
                    of the external content tree and can store new items created in any place in external or internal content trees.
              
                    Example:
                    
                    <DatabaseFileMapping interval="00:00:02" file="/App_Data/$(id)/items.json" media="/App_Data/$(id)/media/" readOnly="false" />
              
                    SUBTREE FILE MAPPING
                    This kind of mapping brings all its items to specific external parent and it saves all new child items of 
                    the external parent item in the specified *.json file. Existing children of the external parent item are still
                    stored in e.g. SQL database and reflected in the content tree side-by-side with json items.
                    
                    Examples: 
                         
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/content.json"             item="{0DE95AE4-41AB-4D01-9EB0-67441B7C2450}" />
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/layout-layouts.json"      item="{75CC5CE4-8979-4008-9D3C-806477D57619}" />
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/layout-placeholders.json" item="{1CE3B36C-9B0C-4EB5-A996-BFCB4EAA5287}" />
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/layout-renderings.json"   item="{32566F0E-7686-45F1-A12F-D7260BD78BC3}" />
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/system-aliases.json"      item="{5F094FE4-CC4B-40FD-9377-9AB00E7F7CA5}" />
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/system-workflows.json"    item="{05592656-56D7-4D85-AACF-30919EE494F9}" />
                    <SubTreeFileMapping interval="00:00:02" file="/App_Data/$(id)/templates.json"           item="{3C1715FE-6A13-4FCF-845F-DE308BA9741D}" />
              -->
            </Mappings>
          </dataProvider>
        </dataProviders>
      </database>
    </databases>
  </sitecore>
</configuration>